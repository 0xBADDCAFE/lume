export const snapshot = {};

snapshot[`postcss plugin 1`] = `2`;

snapshot[`postcss plugin 2`] = `
{
  formats: [
    {
      includesPath: undefined,
      key: ".tmpl.ts",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".tmpl.js",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".tmpl.json",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".json",
      pageType: undefined,
    },
    {
      includesPath: undefined,
      key: ".md",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".js",
      pageType: undefined,
    },
    {
      includesPath: undefined,
      key: ".ts",
      pageType: undefined,
    },
    {
      includesPath: "_includes",
      key: ".njk",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".yaml",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".yml",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".css",
      pageType: "asset",
    },
  ],
}
`;

snapshot[`postcss plugin 3`] = `
{
  content: "::root {\\n  --color: #333;\\n  --background: #fff;\\n  --font-family: sans-serif;\\n}\\n.text {\\n  font-family: var(--font-family)\\n}\\n.text p {\\n    color: var(--color);\\n    box-shadow: 0 0 0.5em var(--background);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n  }\\n",
  data: {
    content: '@import "variables.css";\\n@import "./text.css";\\n',
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/index.css",
  },
  dest: {
    ext: ".css",
    path: "/index",
  },
  src: {
    ext: ".css",
    path: "/index",
  },
}
`;

snapshot[`postcss plugin 4`] = `
{
  content: ".text {\\n  font-family: var(--font-family)\\n}\\n.text p {\\n    color: var(--color);\\n    box-shadow: 0 0 0.5em var(--background);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n  }\\n",
  data: {
    content: ".text {\\n  font-family: var(--font-family);\\n\\n  & p {\\n    color: var(--color);\\n    box-shadow: 0 0 0.5em var(--background);\\n    backface-visibility: hidden;\\n  }\\n}\\n",
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/text.css",
  },
  dest: {
    ext: ".css",
    path: "/text",
  },
  src: {
    ext: ".css",
    path: "/text",
  },
}
`;

snapshot[`postcss plugin without includes 1`] = `2`;

snapshot[`postcss plugin without includes 2`] = `
{
  formats: [
    {
      includesPath: undefined,
      key: ".tmpl.ts",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".tmpl.js",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".tmpl.json",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".json",
      pageType: undefined,
    },
    {
      includesPath: undefined,
      key: ".md",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".js",
      pageType: undefined,
    },
    {
      includesPath: undefined,
      key: ".ts",
      pageType: undefined,
    },
    {
      includesPath: "_includes",
      key: ".njk",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".yaml",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".yml",
      pageType: "page",
    },
    {
      includesPath: undefined,
      key: ".css",
      pageType: "asset",
    },
  ],
}
`;

snapshot[`postcss plugin without includes 3`] = `
{
  content: '@import "variables.css";\\n@import "./text.css";\\n',
  data: {
    content: '@import "variables.css";\\n@import "./text.css";\\n',
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/index.css",
  },
  dest: {
    ext: ".css",
    path: "/index",
  },
  src: {
    ext: ".css",
    path: "/index",
  },
}
`;

snapshot[`postcss plugin without includes 4`] = `
{
  content: ".text {\\n  font-family: var(--font-family)\\n}\\n.text p {\\n    color: var(--color);\\n    box-shadow: 0 0 0.5em var(--background);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n  }\\n",
  data: {
    content: ".text {\\n  font-family: var(--font-family);\\n\\n  & p {\\n    color: var(--color);\\n    box-shadow: 0 0 0.5em var(--background);\\n    backface-visibility: hidden;\\n  }\\n}\\n",
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/text.css",
  },
  dest: {
    ext: ".css",
    path: "/text",
  },
  src: {
    ext: ".css",
    path: "/text",
  },
}
`;
