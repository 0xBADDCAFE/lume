export const snapshot = {};

snapshot[`build a site with jsx/tsx modules 1`] = `5`;

snapshot[`build a site with jsx/tsx modules 2`] = `
{
  formats: [
    {
      includesPath: undefined,
      key: ".tmpl.ts",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".tmpl.js",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".tmpl.json",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".json",
      removeExtension: undefined,
    },
    {
      includesPath: undefined,
      key: ".md",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".js",
      removeExtension: undefined,
    },
    {
      includesPath: undefined,
      key: ".ts",
      removeExtension: undefined,
    },
    {
      includesPath: "_includes",
      key: ".njk",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".yaml",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".yml",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".jsx",
      removeExtension: true,
    },
    {
      includesPath: undefined,
      key: ".tsx",
      removeExtension: true,
    },
  ],
}
`;

snapshot[`build a site with jsx/tsx modules 3`] = `
[
]
`;

snapshot[`build a site with jsx/tsx modules 4`] = `
{
  content: "<html><head><title>This is the title</title></head><body><main><h1>Hello world</h1><p>This is a JSX page</p></main></body></html>",
  data: {
    children: {
      "\$\$typeof": Symbol(react.element),
      _owner: null,
      key: null,
      props: {
        children: [
          {
            "\$\$typeof": Symbol(react.element),
            _owner: null,
            key: null,
            props: {
              children: "Hello world",
            },
            ref: null,
            type: "h1",
          },
          {
            "\$\$typeof": Symbol(react.element),
            _owner: null,
            key: null,
            props: {
              children: "This is a JSX page",
            },
            ref: null,
            type: "p",
          },
        ],
      },
      ref: null,
      toString: [Function],
      type: Symbol(react.fragment),
    },
    content: undefined,
    date: 1970-01-01T00:00:00.000Z,
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    title: "This is the title",
    url: "/",
  },
  dest: {
    ext: ".html",
    path: "/index",
  },
  src: {
    ext: ".jsx",
    path: "/index",
  },
}
`;

snapshot[`build a site with jsx/tsx modules 5`] = `
{
  content: "<html><head><title></title></head><body><main><div>1</div></main></body></html>",
  data: {
    children: {
      "\$\$typeof": Symbol(react.element),
      _owner: null,
      key: null,
      props: {
        children: 1,
      },
      ref: null,
      toString: [Function],
      type: "div",
    },
    content: undefined,
    date: 1970-01-01T00:00:00.000Z,
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/page/1/",
  },
  dest: {
    ext: ".html",
    path: "/page/1/index",
  },
  src: {
    ext: ".jsx",
    path: "/multiple[0]",
  },
}
`;

snapshot[`build a site with jsx/tsx modules 6`] = `
{
  content: "<html><head><title></title></head><body><main><div>2</div></main></body></html>",
  data: {
    children: {
      "\$\$typeof": Symbol(react.element),
      _owner: null,
      key: null,
      props: {
        children: 2,
      },
      ref: null,
      toString: [Function],
      type: "div",
    },
    content: undefined,
    date: 1970-01-01T00:00:00.000Z,
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    url: "/page/2/",
  },
  dest: {
    ext: ".html",
    path: "/page/2/index",
  },
  src: {
    ext: ".jsx",
    path: "/multiple[1]",
  },
}
`;

snapshot[`build a site with jsx/tsx modules 7`] = `
{
  content: '<html><head><title>This is the title</title></head><body><main><h1>This is the title</h1><p>This is a JSX page <a href="/blog/">Go to home</a></p></main></body></html>',
  data: {
    children: {
      "\$\$typeof": Symbol(react.element),
      _owner: null,
      key: null,
      props: {
        children: [
          {
            "\$\$typeof": Symbol(react.element),
            _owner: null,
            key: null,
            props: {
              children: "This is the title",
            },
            ref: null,
            type: "h1",
          },
          {
            "\$\$typeof": Symbol(react.element),
            _owner: null,
            key: null,
            props: {
              children: [
                "This is a JSX page ",
                {
                  "\$\$typeof": Symbol(react.element),
                  _owner: null,
                  key: null,
                  props: {
                    children: "Go to home",
                    href: "/blog/",
                  },
                  ref: null,
                  type: "a",
                },
              ],
            },
            ref: null,
            type: "p",
          },
        ],
      },
      ref: null,
      toString: [Function],
      type: Symbol(react.fragment),
    },
    content: undefined,
    date: 1970-01-01T00:00:00.000Z,
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    title: "This is the title",
    url: "/with-function/",
  },
  dest: {
    ext: ".html",
    path: "/with-function/index",
  },
  src: {
    ext: ".jsx",
    path: "/with-function",
  },
}
`;

snapshot[`build a site with jsx/tsx modules 8`] = `
{
  content: '<html><head><title>Markdown combined with JSX</title></head><body><main><div><h1>Hello world</h1>
<p>This is a <strong>markdown</strong> text. <a href="/">Go home</a></p>
</div></main></body></html>',
  data: {
    content: "
# Hello world

This is a **markdown** text. [Go home](/)
",
    date: 1970-01-01T00:00:00.000Z,
    paginate: [GeneratorFunction: paginate],
    search: Search {},
    tags: [
    ],
    title: "Markdown combined with JSX",
    url: "/with-markdown/",
  },
  dest: {
    ext: ".html",
    path: "/with-markdown/index",
  },
  src: {
    ext: ".md",
    path: "/with-markdown",
  },
}
`;
